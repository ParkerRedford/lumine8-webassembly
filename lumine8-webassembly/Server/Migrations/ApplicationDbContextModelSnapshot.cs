// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using lumine8.Server.Data;

#nullable disable

namespace WebApplication2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("lumine8_GrpcService.About", b =>
                {
                    b.Property<string>("AboutId")
                        .HasColumnType("text");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MartialStatus")
                        .HasColumnType("integer");

                    b.Property<int>("Sex")
                        .HasColumnType("integer");

                    b.HasKey("AboutId");

                    b.ToTable("About");
                });

            modelBuilder.Entity("lumine8_GrpcService.AboutMe", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("AboutMeDescription")
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("AboutMe");
                });

            modelBuilder.Entity("lumine8_GrpcService.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<bool>("AllowGroupInvites")
                        .HasColumnType("boolean");

                    b.Property<bool>("AllowRequests")
                        .HasColumnType("boolean");

                    b.Property<bool>("AllowSharing")
                        .HasColumnType("boolean");

                    b.Property<bool>("FriendsFeed")
                        .HasColumnType("boolean");

                    b.Property<int>("HoursFeed")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PublicKey")
                        .HasColumnType("text");

                    b.Property<DateTime>("UserSince")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasAlternateKey("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("lumine8_GrpcService.Ban", b =>
                {
                    b.Property<string>("BanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("GroupId")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("BanId");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("Bans");
                });

            modelBuilder.Entity("lumine8_GrpcService.CategoryRooms", b =>
                {
                    b.Property<string>("CategoryRoomsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<string>("RoomId")
                        .HasColumnType("text");

                    b.HasKey("CategoryRoomsId");

                    b.HasIndex("RoomId");

                    b.ToTable("CategoryRooms");
                });

            modelBuilder.Entity("lumine8_GrpcService.ChatMessage", b =>
                {
                    b.Property<string>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<string>("RoomId")
                        .HasColumnType("text");

                    b.Property<string>("SenderId")
                        .HasColumnType("text");

                    b.Property<string>("UserRoomId")
                        .HasColumnType("text");

                    b.HasKey("MessageId");

                    b.HasIndex("SenderId");

                    b.HasIndex("UserRoomId");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("lumine8_GrpcService.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("StateId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("lumine8_GrpcService.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("PhoneCode")
                        .HasColumnType("integer");

                    b.Property<string>("Sortname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("lumine8_GrpcService.Education", b =>
                {
                    b.Property<string>("EducationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<int>("Degree")
                        .HasColumnType("integer");

                    b.Property<int>("GraduationDate")
                        .HasColumnType("integer");

                    b.Property<string>("Major")
                        .HasColumnType("text");

                    b.Property<string>("Minor")
                        .HasColumnType("text");

                    b.Property<string>("SchoolName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("EducationId");

                    b.HasIndex("UserId");

                    b.ToTable("EducationList");
                });

            modelBuilder.Entity("lumine8_GrpcService.Exception", b =>
                {
                    b.Property<string>("ExceptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<bool>("ApproveLumine")
                        .HasColumnType("boolean");

                    b.Property<bool>("Ban")
                        .HasColumnType("boolean");

                    b.Property<bool>("Description")
                        .HasColumnType("boolean");

                    b.Property<string>("GroupId")
                        .HasColumnType("text");

                    b.Property<bool>("Hashtags")
                        .HasColumnType("boolean");

                    b.Property<bool>("Pictures")
                        .HasColumnType("boolean");

                    b.Property<bool>("PostLumine")
                        .HasColumnType("boolean");

                    b.Property<bool>("RemoveBan")
                        .HasColumnType("boolean");

                    b.Property<bool>("RemoveLumine")
                        .HasColumnType("boolean");

                    b.Property<bool>("RemoveMember")
                        .HasColumnType("boolean");

                    b.Property<bool>("RemovePictures")
                        .HasColumnType("boolean");

                    b.Property<bool>("RequestLumine")
                        .HasColumnType("boolean");

                    b.Property<bool>("SeeLumine")
                        .HasColumnType("boolean");

                    b.Property<bool>("SendInvites")
                        .HasColumnType("boolean");

                    b.Property<bool>("ShareLumine")
                        .HasColumnType("boolean");

                    b.Property<bool>("UploadPictures")
                        .HasColumnType("boolean");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("ExceptionId");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("Exceptions");
                });

            modelBuilder.Entity("lumine8_GrpcService.FAQ", b =>
                {
                    b.Property<string>("FAQId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Answer")
                        .HasColumnType("text");

                    b.Property<string>("GroupId")
                        .HasColumnType("text");

                    b.Property<string>("Question")
                        .HasColumnType("text");

                    b.HasKey("FAQId");

                    b.HasIndex("GroupId");

                    b.ToTable("FAQ");
                });

            modelBuilder.Entity("lumine8_GrpcService.FriendDuo", b =>
                {
                    b.Property<string>("FriendDuoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<bool>("Blacklist")
                        .HasColumnType("boolean");

                    b.Property<bool>("Filter")
                        .HasColumnType("boolean");

                    b.Property<string>("FriendId")
                        .HasColumnType("text");

                    b.Property<bool>("Priority")
                        .HasColumnType("boolean");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("FriendDuoId");

                    b.HasIndex("FriendId");

                    b.ToTable("Friends");
                });

            modelBuilder.Entity("lumine8_GrpcService.GroupApproval", b =>
                {
                    b.Property<string>("GroupApprovalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("GroupId")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("GroupApprovalId");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("GroupApprovals");
                });

            modelBuilder.Entity("lumine8_GrpcService.GroupImage", b =>
                {
                    b.Property<string>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("FileName")
                        .HasColumnType("text");

                    b.Property<string>("GroupId")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("ImageId");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("GroupImages");
                });

            modelBuilder.Entity("lumine8_GrpcService.GroupLink", b =>
                {
                    b.Property<string>("LinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("GroupId")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("LinkId");

                    b.HasIndex("GroupId");

                    b.ToTable("GroupLinks");
                });

            modelBuilder.Entity("lumine8_GrpcService.GroupModel", b =>
                {
                    b.Property<string>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("GroupJoin")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("OwnerId")
                        .HasColumnType("text");

                    b.Property<int>("Security")
                        .HasColumnType("integer");

                    b.HasKey("GroupId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("lumine8_GrpcService.GroupProfilePicture", b =>
                {
                    b.Property<string>("ProfilePictureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("GroupId")
                        .HasColumnType("text");

                    b.Property<string>("ImageId")
                        .HasColumnType("text");

                    b.HasKey("ProfilePictureId");

                    b.HasIndex("GroupId");

                    b.ToTable("GroupProfilePictures");
                });

            modelBuilder.Entity("lumine8_GrpcService.GroupRequest", b =>
                {
                    b.Property<string>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("GroupId")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("RequestId");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("GroupRequests");
                });

            modelBuilder.Entity("lumine8_GrpcService.GroupUserComment", b =>
                {
                    b.Property<string>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ImageId")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("CommentId");

                    b.HasIndex("ImageId");

                    b.HasIndex("UserId");

                    b.ToTable("GroupUserComments");
                });

            modelBuilder.Entity("lumine8_GrpcService.Hashtag", b =>
                {
                    b.Property<string>("HashtagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("GroupId")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("HashtagId");

                    b.HasIndex("GroupId");

                    b.ToTable("Hashtags");
                });

            modelBuilder.Entity("lumine8_GrpcService.Image", b =>
                {
                    b.Property<string>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("FileName")
                        .HasColumnType("text");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("ImageId");

                    b.HasIndex("UserId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("lumine8_GrpcService.ImageRoom", b =>
                {
                    b.Property<string>("ImageRoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("ImageId")
                        .HasColumnType("text");

                    b.Property<string>("RoomId")
                        .HasColumnType("text");

                    b.Property<string>("RoomId1")
                        .HasColumnType("text");

                    b.HasKey("ImageRoomId");

                    b.HasIndex("ImageId")
                        .IsUnique();

                    b.HasIndex("RoomId");

                    b.HasIndex("RoomId1");

                    b.ToTable("ImageRooms");
                });

            modelBuilder.Entity("lumine8_GrpcService.Interest", b =>
                {
                    b.Property<string>("InterestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("InterestName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("InterestId");

                    b.HasIndex("UserId");

                    b.ToTable("Interests");
                });

            modelBuilder.Entity("lumine8_GrpcService.Like", b =>
                {
                    b.Property<string>("LikeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("MessageId")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("LikeId");

                    b.HasIndex("MessageId");

                    b.HasIndex("UserId");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("lumine8_GrpcService.Link", b =>
                {
                    b.Property<string>("LinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("LinkId");

                    b.HasIndex("UserId");

                    b.ToTable("Links");
                });

            modelBuilder.Entity("lumine8_GrpcService.Lived", b =>
                {
                    b.Property<string>("PlaceLivedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<int>("CityId")
                        .HasColumnType("integer");

                    b.Property<int>("CountryId")
                        .HasColumnType("integer");

                    b.Property<string>("County")
                        .HasColumnType("text");

                    b.Property<bool>("Current")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("From")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PostalCode")
                        .HasColumnType("text");

                    b.Property<int>("StateId")
                        .HasColumnType("integer");

                    b.Property<string>("StreetName")
                        .HasColumnType("text");

                    b.Property<DateTime>("To")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("PlaceLivedId");

                    b.HasIndex("UserId");

                    b.ToTable("PlacesLived");
                });

            modelBuilder.Entity("lumine8_GrpcService.LumineCheck", b =>
                {
                    b.Property<string>("CheckId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("GroupId")
                        .HasColumnType("text");

                    b.Property<string>("RoomId")
                        .HasColumnType("text");

                    b.HasKey("CheckId");

                    b.HasIndex("GroupId");

                    b.HasIndex("RoomId");

                    b.ToTable("LumineChecks");
                });

            modelBuilder.Entity("lumine8_GrpcService.MainPicture", b =>
                {
                    b.Property<string>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("FileName")
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("MainPictures");
                });

            modelBuilder.Entity("lumine8_GrpcService.Message", b =>
                {
                    b.Property<string>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MessageString")
                        .HasColumnType("text");

                    b.Property<string>("RoomId")
                        .HasColumnType("text");

                    b.Property<string>("SenderId")
                        .HasColumnType("text");

                    b.HasKey("MessageId");

                    b.HasIndex("RoomId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("lumine8_GrpcService.MessageHashtag", b =>
                {
                    b.Property<string>("MessageHashtagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("RoomId")
                        .HasColumnType("text");

                    b.HasKey("MessageHashtagId");

                    b.HasIndex("RoomId");

                    b.ToTable("MessageHashtags");
                });

            modelBuilder.Entity("lumine8_GrpcService.MessageOnMessage", b =>
                {
                    b.Property<string>("MessageOnMessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("MessageId")
                        .HasColumnType("text");

                    b.Property<string>("MessageOnId")
                        .HasColumnType("text");

                    b.HasKey("MessageOnMessageId");

                    b.HasIndex("MessageId");

                    b.ToTable("MessageOnMessages");
                });

            modelBuilder.Entity("lumine8_GrpcService.Notification", b =>
                {
                    b.Property<string>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("NotificationId");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("lumine8_GrpcService.PFAQ", b =>
                {
                    b.Property<string>("FAQId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Answer")
                        .HasColumnType("text");

                    b.Property<string>("Question")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("FAQId");

                    b.HasIndex("UserId");

                    b.ToTable("PFAQ");
                });

            modelBuilder.Entity("lumine8_GrpcService.PetitionAddress", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LivedId")
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.HasIndex("LivedId");

                    b.ToTable("PetitionAddresses");
                });

            modelBuilder.Entity("lumine8_GrpcService.PetitionModel", b =>
                {
                    b.Property<string>("PetitionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("gen_random_uuid()");

                    b.Property<string>("CreatedById")
                        .HasColumnType("text");

                    b.Property<string>("Petition")
                        .HasColumnType("text");

                    b.HasKey("PetitionId");

                    b.HasIndex("CreatedById");

                    b.ToTable("Petitions");
                });

            modelBuilder.Entity("lumine8_GrpcService.PetitionSig", b =>
                {
                    b.Property<string>("PetitionSigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("gen_random_uuid()");

                    b.Property<string>("PetitionId")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("PetitionSigId");

                    b.HasIndex("PetitionId");

                    b.ToTable("PetitionSigs");
                });

            modelBuilder.Entity("lumine8_GrpcService.PrivateProfile", b =>
                {
                    b.Property<string>("PrivateProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<bool>("About")
                        .HasColumnType("boolean");

                    b.Property<bool>("AboutMe")
                        .HasColumnType("boolean");

                    b.Property<bool>("Education")
                        .HasColumnType("boolean");

                    b.Property<bool>("Friends")
                        .HasColumnType("boolean");

                    b.Property<bool>("Groups")
                        .HasColumnType("boolean");

                    b.Property<bool>("Interests")
                        .HasColumnType("boolean");

                    b.Property<bool>("Lumine")
                        .HasColumnType("boolean");

                    b.Property<bool>("Pictures")
                        .HasColumnType("boolean");

                    b.Property<bool>("PlacesLived")
                        .HasColumnType("boolean");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("WhoId")
                        .HasColumnType("text");

                    b.Property<bool>("WorkHistory")
                        .HasColumnType("boolean");

                    b.HasKey("PrivateProfileId");

                    b.HasIndex("WhoId");

                    b.ToTable("PrivateProfiles");
                });

            modelBuilder.Entity("lumine8_GrpcService.ProfilePicture", b =>
                {
                    b.Property<string>("ProfilePictureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("ImageId")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("ProfilePictureId");

                    b.HasIndex("UserId");

                    b.ToTable("ProfilePictures");
                });

            modelBuilder.Entity("lumine8_GrpcService.ProfileSecurity", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<int>("AboutMe")
                        .HasColumnType("integer");

                    b.Property<int>("DOB")
                        .HasColumnType("integer");

                    b.Property<int>("Education")
                        .HasColumnType("integer");

                    b.Property<int>("Friends")
                        .HasColumnType("integer");

                    b.Property<int>("Groups")
                        .HasColumnType("integer");

                    b.Property<int>("Interests")
                        .HasColumnType("integer");

                    b.Property<int>("Lumine")
                        .HasColumnType("integer");

                    b.Property<int>("Pictures")
                        .HasColumnType("integer");

                    b.Property<int>("PlacesLived")
                        .HasColumnType("integer");

                    b.Property<int>("Relationship")
                        .HasColumnType("integer");

                    b.Property<int>("Sex")
                        .HasColumnType("integer");

                    b.Property<int>("WorkHistory")
                        .HasColumnType("integer");

                    b.HasKey("UserId");

                    b.ToTable("ProfileSecurities");
                });

            modelBuilder.Entity("lumine8_GrpcService.Relationship", b =>
                {
                    b.Property<string>("RelationshipId")
                        .HasColumnType("text");

                    b.Property<int>("RelationshipType")
                        .HasColumnType("integer");

                    b.Property<string>("RelationshipWithId")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("RelationshipId");

                    b.HasIndex("UserId");

                    b.ToTable("Relationship");
                });

            modelBuilder.Entity("lumine8_GrpcService.Request", b =>
                {
                    b.Property<string>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("SenderId")
                        .HasColumnType("text");

                    b.Property<string>("SentToId")
                        .HasColumnType("text");

                    b.HasKey("RequestId");

                    b.HasIndex("SentToId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("lumine8_GrpcService.Role", b =>
                {
                    b.Property<string>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<bool>("Blacklist")
                        .HasColumnType("boolean");

                    b.Property<bool>("Filter")
                        .HasColumnType("boolean");

                    b.Property<string>("GroupId")
                        .HasColumnType("text");

                    b.Property<bool>("Priority")
                        .HasColumnType("boolean");

                    b.Property<int>("RoleType")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("RoleId");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("lumine8_GrpcService.Room", b =>
                {
                    b.Property<string>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<bool>("AllowComments")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("OwnerId")
                        .HasColumnType("text");

                    b.HasKey("RoomId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("lumine8_GrpcService.RoomGroup", b =>
                {
                    b.Property<string>("RoomGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("GroupId")
                        .HasColumnType("text");

                    b.Property<string>("RoomId")
                        .HasColumnType("text");

                    b.Property<string>("RoomToMessageId")
                        .HasColumnType("text");

                    b.HasKey("RoomGroupId");

                    b.HasIndex("GroupId");

                    b.HasIndex("RoomId");

                    b.HasIndex("RoomToMessageId");

                    b.ToTable("RoomGroups");
                });

            modelBuilder.Entity("lumine8_GrpcService.RoomToMessage", b =>
                {
                    b.Property<string>("RoomToMessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("MessageId")
                        .HasColumnType("text");

                    b.Property<string>("RoomId")
                        .HasColumnType("text");

                    b.HasKey("RoomToMessageId");

                    b.HasIndex("MessageId");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomToMessages");
                });

            modelBuilder.Entity("lumine8_GrpcService.SectionRoles", b =>
                {
                    b.Property<string>("SectionRolesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<int>("Ban")
                        .HasColumnType("integer");

                    b.Property<int>("CheckLumine")
                        .HasColumnType("integer");

                    b.Property<int>("Description")
                        .HasColumnType("integer");

                    b.Property<string>("GroupId")
                        .HasColumnType("text");

                    b.Property<int>("Hashtags")
                        .HasColumnType("integer");

                    b.Property<int>("Permissions")
                        .HasColumnType("integer");

                    b.Property<int>("PermissionsOneBelow")
                        .HasColumnType("integer");

                    b.Property<int>("Pictures")
                        .HasColumnType("integer");

                    b.Property<int>("PostLumine")
                        .HasColumnType("integer");

                    b.Property<int>("RemoveBan")
                        .HasColumnType("integer");

                    b.Property<int>("RemoveLumine")
                        .HasColumnType("integer");

                    b.Property<int>("RemoveMember")
                        .HasColumnType("integer");

                    b.Property<int>("RemovePictures")
                        .HasColumnType("integer");

                    b.Property<int>("RequestApprovals")
                        .HasColumnType("integer");

                    b.Property<int>("RequestLumine")
                        .HasColumnType("integer");

                    b.Property<int>("SeeLumine")
                        .HasColumnType("integer");

                    b.Property<int>("SendInvites")
                        .HasColumnType("integer");

                    b.Property<int>("ShareLumine")
                        .HasColumnType("integer");

                    b.Property<int>("UpdatePictures")
                        .HasColumnType("integer");

                    b.Property<int>("UploadPictures")
                        .HasColumnType("integer");

                    b.HasKey("SectionRolesId");

                    b.HasIndex("GroupId");

                    b.ToTable("SectionRoles");
                });

            modelBuilder.Entity("lumine8_GrpcService.Share", b =>
                {
                    b.Property<string>("ShareId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RoomId")
                        .HasColumnType("text");

                    b.Property<string>("SenderId")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("ShareId");

                    b.HasIndex("RoomId");

                    b.HasIndex("SenderId");

                    b.ToTable("Shares");
                });

            modelBuilder.Entity("lumine8_GrpcService.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("States");
                });

            modelBuilder.Entity("lumine8_GrpcService.Subscribe", b =>
                {
                    b.Property<string>("SubscribeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("SubscriberId")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("SubscribeId");

                    b.HasIndex("SubscriberId");

                    b.ToTable("Subscribes");
                });

            modelBuilder.Entity("lumine8_GrpcService.TagsFeed", b =>
                {
                    b.Property<string>("TagsFeedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<bool>("Blacklist")
                        .HasColumnType("boolean");

                    b.Property<bool>("Checked")
                        .HasColumnType("boolean");

                    b.Property<string>("Tag")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("TagsFeedId");

                    b.HasIndex("UserId");

                    b.ToTable("TagsFeeds");
                });

            modelBuilder.Entity("lumine8_GrpcService.Token", b =>
                {
                    b.Property<string>("TokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("TokenId");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("lumine8_GrpcService.UserComment", b =>
                {
                    b.Property<string>("UserCommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ImageId")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("UserCommentId");

                    b.HasIndex("ImageId");

                    b.HasIndex("UserId");

                    b.ToTable("UserComments");
                });

            modelBuilder.Entity("lumine8_GrpcService.UserRoom", b =>
                {
                    b.Property<string>("UserRoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("OtherId")
                        .HasColumnType("text");

                    b.Property<string>("RoomId")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("UserRoomId");

                    b.HasIndex("OtherId");

                    b.ToTable("UserRooms");
                });

            modelBuilder.Entity("lumine8_GrpcService.Video", b =>
                {
                    b.Property<string>("VideoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("FileName")
                        .HasColumnType("text");

                    b.Property<string>("OwnerId")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("Views")
                        .HasColumnType("bigint");

                    b.HasKey("VideoId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("lumine8_GrpcService.VideoComment", b =>
                {
                    b.Property<string>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("VideoId")
                        .HasColumnType("text");

                    b.HasKey("CommentId");

                    b.HasIndex("UserId");

                    b.HasIndex("VideoId");

                    b.ToTable("VideoComments");
                });

            modelBuilder.Entity("lumine8_GrpcService.VideoCommentOn", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("CommentId")
                        .HasColumnType("text");

                    b.Property<string>("CommentOnId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CommentOnId");

                    b.ToTable("VideoCommentOns");
                });

            modelBuilder.Entity("lumine8_GrpcService.VideoLike", b =>
                {
                    b.Property<string>("VideoLikeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("gen_random_uuid()");

                    b.Property<bool>("Like")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LikeDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("VideoId")
                        .HasColumnType("text");

                    b.HasKey("VideoLikeId");

                    b.ToTable("VideoLikes");
                });

            modelBuilder.Entity("lumine8_GrpcService.VideoRoom", b =>
                {
                    b.Property<string>("VideoRoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("text");

                    b.Property<string>("RoomId")
                        .HasColumnType("text");

                    b.Property<string>("VideoId")
                        .HasColumnType("text");

                    b.HasKey("VideoRoomId");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("RoomId");

                    b.HasIndex("VideoId");

                    b.ToTable("VideoRooms");
                });

            modelBuilder.Entity("lumine8_GrpcService.Vote", b =>
                {
                    b.Property<string>("VoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RoomId")
                        .HasColumnType("text");

                    b.Property<bool>("UpDown")
                        .HasColumnType("boolean");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("VoteId");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("lumine8_GrpcService.WorkHistory", b =>
                {
                    b.Property<string>("WorkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<int>("CityId")
                        .HasColumnType("integer");

                    b.Property<int>("CountryId")
                        .HasColumnType("integer");

                    b.Property<string>("County")
                        .HasColumnType("text");

                    b.Property<bool>("Current")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("From")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("JobTitle")
                        .HasColumnType("text");

                    b.Property<string>("Organization")
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .HasColumnType("text");

                    b.Property<int>("StateId")
                        .HasColumnType("integer");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.Property<DateTime>("To")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("WorkId");

                    b.HasIndex("UserId");

                    b.ToTable("WorkHistory");
                });

            modelBuilder.Entity("lumine8_GrpcService.About", b =>
                {
                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("About")
                        .HasForeignKey("AboutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("lumine8_GrpcService.AboutMe", b =>
                {
                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("AboutMe")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("lumine8_GrpcService.Ban", b =>
                {
                    b.HasOne("lumine8_GrpcService.GroupModel", "GroupModel")
                        .WithMany("Bans")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("Bans")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");

                    b.Navigation("GroupModel");
                });

            modelBuilder.Entity("lumine8_GrpcService.CategoryRooms", b =>
                {
                    b.HasOne("lumine8_GrpcService.Room", "Room")
                        .WithMany("CategoryRooms")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("lumine8_GrpcService.RoomToMessage", "RoomToMessage")
                        .WithMany("CategoryRooms")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Room");

                    b.Navigation("RoomToMessage");
                });

            modelBuilder.Entity("lumine8_GrpcService.ChatMessage", b =>
                {
                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("ChatMessages")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("lumine8_GrpcService.UserRoom", "UserRoom")
                        .WithMany("ChatMessages")
                        .HasForeignKey("UserRoomId");

                    b.Navigation("ApplicationUser");

                    b.Navigation("UserRoom");
                });

            modelBuilder.Entity("lumine8_GrpcService.City", b =>
                {
                    b.HasOne("lumine8_GrpcService.State", "State")
                        .WithMany("Cities")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("lumine8_GrpcService.Education", b =>
                {
                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("EducationList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("lumine8_GrpcService.Exception", b =>
                {
                    b.HasOne("lumine8_GrpcService.GroupModel", "GroupModel")
                        .WithMany("Exceptions")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("Exceptions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");

                    b.Navigation("GroupModel");
                });

            modelBuilder.Entity("lumine8_GrpcService.FAQ", b =>
                {
                    b.HasOne("lumine8_GrpcService.GroupModel", "GroupModel")
                        .WithMany("FAQs")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("GroupModel");
                });

            modelBuilder.Entity("lumine8_GrpcService.FriendDuo", b =>
                {
                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("FriendDuos")
                        .HasForeignKey("FriendId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("lumine8_GrpcService.GroupApproval", b =>
                {
                    b.HasOne("lumine8_GrpcService.GroupModel", "GroupModel")
                        .WithMany("GroupApprovals")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("GroupApprovals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");

                    b.Navigation("GroupModel");
                });

            modelBuilder.Entity("lumine8_GrpcService.GroupImage", b =>
                {
                    b.HasOne("lumine8_GrpcService.GroupModel", "GroupModel")
                        .WithMany("GroupImages")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("GroupImages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");

                    b.Navigation("GroupModel");
                });

            modelBuilder.Entity("lumine8_GrpcService.GroupLink", b =>
                {
                    b.HasOne("lumine8_GrpcService.GroupModel", "GroupModel")
                        .WithMany("GroupLinks")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("GroupModel");
                });

            modelBuilder.Entity("lumine8_GrpcService.GroupModel", b =>
                {
                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("GroupModels")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("lumine8_GrpcService.GroupProfilePicture", b =>
                {
                    b.HasOne("lumine8_GrpcService.GroupModel", "GroupModel")
                        .WithMany("GroupProfilePictures")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("GroupModel");
                });

            modelBuilder.Entity("lumine8_GrpcService.GroupRequest", b =>
                {
                    b.HasOne("lumine8_GrpcService.GroupModel", "GroupModel")
                        .WithMany("GroupRequests")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("GroupRequests")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");

                    b.Navigation("GroupModel");
                });

            modelBuilder.Entity("lumine8_GrpcService.GroupUserComment", b =>
                {
                    b.HasOne("lumine8_GrpcService.GroupImage", "GroupImage")
                        .WithMany("GroupUserComments")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("GroupUserComments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");

                    b.Navigation("GroupImage");
                });

            modelBuilder.Entity("lumine8_GrpcService.Hashtag", b =>
                {
                    b.HasOne("lumine8_GrpcService.GroupModel", "GroupModel")
                        .WithMany("Hashtags")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("GroupModel");
                });

            modelBuilder.Entity("lumine8_GrpcService.Image", b =>
                {
                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("Images")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("lumine8_GrpcService.ImageRoom", b =>
                {
                    b.HasOne("lumine8_GrpcService.Image", null)
                        .WithOne("ImageRoom")
                        .HasForeignKey("lumine8_GrpcService.ImageRoom", "ImageId");

                    b.HasOne("lumine8_GrpcService.Room", "Room")
                        .WithMany("ImageRooms")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("lumine8_GrpcService.Room", null)
                        .WithMany("ImageRoom")
                        .HasForeignKey("RoomId1");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("lumine8_GrpcService.Interest", b =>
                {
                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("Interests")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("lumine8_GrpcService.Like", b =>
                {
                    b.HasOne("lumine8_GrpcService.Message", "Message")
                        .WithMany("Likes")
                        .HasForeignKey("MessageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("Likes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");

                    b.Navigation("Message");
                });

            modelBuilder.Entity("lumine8_GrpcService.Link", b =>
                {
                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("Links")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("lumine8_GrpcService.Lived", b =>
                {
                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("Liveds")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("lumine8_GrpcService.LumineCheck", b =>
                {
                    b.HasOne("lumine8_GrpcService.GroupModel", "GroupModel")
                        .WithMany("LumineChecks")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("lumine8_GrpcService.Room", "Room")
                        .WithMany("LumineChecks")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("GroupModel");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("lumine8_GrpcService.MainPicture", b =>
                {
                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("MainPicture")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("lumine8_GrpcService.Message", b =>
                {
                    b.HasOne("lumine8_GrpcService.Room", "Room")
                        .WithMany("Messages")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("Messages")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("lumine8_GrpcService.MessageHashtag", b =>
                {
                    b.HasOne("lumine8_GrpcService.Room", "Room")
                        .WithMany("MessageHashtags")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Room");
                });

            modelBuilder.Entity("lumine8_GrpcService.MessageOnMessage", b =>
                {
                    b.HasOne("lumine8_GrpcService.Message", "Message")
                        .WithMany()
                        .HasForeignKey("MessageId");

                    b.Navigation("Message");
                });

            modelBuilder.Entity("lumine8_GrpcService.Notification", b =>
                {
                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("lumine8_GrpcService.PFAQ", b =>
                {
                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("PFAQs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("lumine8_GrpcService.PetitionAddress", b =>
                {
                    b.HasOne("lumine8_GrpcService.Lived", "Lived")
                        .WithMany("PetitionAddresses")
                        .HasForeignKey("LivedId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("PetitionAddresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Lived");
                });

            modelBuilder.Entity("lumine8_GrpcService.PetitionModel", b =>
                {
                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("Petitions")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("lumine8_GrpcService.PetitionSig", b =>
                {
                    b.HasOne("lumine8_GrpcService.PetitionModel", "Petition")
                        .WithMany("PetitionSigs")
                        .HasForeignKey("PetitionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Petition");
                });

            modelBuilder.Entity("lumine8_GrpcService.PrivateProfile", b =>
                {
                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("PrivateProfiles")
                        .HasForeignKey("WhoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("lumine8_GrpcService.ProfilePicture", b =>
                {
                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("ProfilePictures")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("lumine8_GrpcService.ProfileSecurity", b =>
                {
                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("ProfileSecurity")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("lumine8_GrpcService.Relationship", b =>
                {
                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("Relationships")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("lumine8_GrpcService.Request", b =>
                {
                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("Requests")
                        .HasForeignKey("SentToId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("lumine8_GrpcService.Role", b =>
                {
                    b.HasOne("lumine8_GrpcService.GroupModel", "GroupModel")
                        .WithMany("Roles")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");

                    b.Navigation("GroupModel");
                });

            modelBuilder.Entity("lumine8_GrpcService.Room", b =>
                {
                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("Rooms")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("lumine8_GrpcService.RoomGroup", b =>
                {
                    b.HasOne("lumine8_GrpcService.GroupModel", "GroupModel")
                        .WithMany("RoomGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("lumine8_GrpcService.Room", "Room")
                        .WithMany("RoomGroups")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("lumine8_GrpcService.RoomToMessage", "RoomToMessage")
                        .WithMany("RoomGroups")
                        .HasForeignKey("RoomToMessageId");

                    b.Navigation("GroupModel");

                    b.Navigation("Room");

                    b.Navigation("RoomToMessage");
                });

            modelBuilder.Entity("lumine8_GrpcService.RoomToMessage", b =>
                {
                    b.HasOne("lumine8_GrpcService.Message", "Message")
                        .WithMany("RoomToMessages")
                        .HasForeignKey("MessageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("lumine8_GrpcService.Room", "Room")
                        .WithMany("RoomToMessages")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Message");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("lumine8_GrpcService.SectionRoles", b =>
                {
                    b.HasOne("lumine8_GrpcService.GroupModel", "GroupModel")
                        .WithMany("SectionRoles")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("GroupModel");
                });

            modelBuilder.Entity("lumine8_GrpcService.Share", b =>
                {
                    b.HasOne("lumine8_GrpcService.Room", "Room")
                        .WithMany("Shares")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("lumine8_GrpcService.RoomToMessage", "RoomToMessage")
                        .WithMany("Shares")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("Shares")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");

                    b.Navigation("Room");

                    b.Navigation("RoomToMessage");
                });

            modelBuilder.Entity("lumine8_GrpcService.State", b =>
                {
                    b.HasOne("lumine8_GrpcService.Country", "Country")
                        .WithMany("States")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("lumine8_GrpcService.Subscribe", b =>
                {
                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("Subscribes")
                        .HasForeignKey("SubscriberId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("lumine8_GrpcService.TagsFeed", b =>
                {
                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("TagsFeeds")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("lumine8_GrpcService.Token", b =>
                {
                    b.HasOne("lumine8_GrpcService.ApplicationUser", null)
                        .WithMany("Tokens")
                        .HasForeignKey("ApplicationUserId");
                });

            modelBuilder.Entity("lumine8_GrpcService.UserComment", b =>
                {
                    b.HasOne("lumine8_GrpcService.Image", "Image")
                        .WithMany("UserComments")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("UserComment")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("lumine8_GrpcService.UserRoom", b =>
                {
                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("UserRooms")
                        .HasForeignKey("OtherId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("lumine8_GrpcService.Video", b =>
                {
                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("Videos")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("lumine8_GrpcService.VideoComment", b =>
                {
                    b.HasOne("lumine8_GrpcService.VideoCommentOn", "VideoCommentOn")
                        .WithMany("VideoComments")
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("VideoComments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("lumine8_GrpcService.Video", "Video")
                        .WithMany("VideoComments")
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");

                    b.Navigation("Video");

                    b.Navigation("VideoCommentOn");
                });

            modelBuilder.Entity("lumine8_GrpcService.VideoCommentOn", b =>
                {
                    b.HasOne("lumine8_GrpcService.VideoComment", "VideoComment")
                        .WithMany("VideoCommentOns")
                        .HasForeignKey("CommentOnId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("VideoComment");
                });

            modelBuilder.Entity("lumine8_GrpcService.VideoRoom", b =>
                {
                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("lumine8_GrpcService.Room", "Room")
                        .WithMany("VideoRooms")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("lumine8_GrpcService.Video", "Video")
                        .WithMany("VideoRooms")
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");

                    b.Navigation("Room");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("lumine8_GrpcService.Vote", b =>
                {
                    b.HasOne("lumine8_GrpcService.Room", "Room")
                        .WithMany("Votes")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("Votes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("lumine8_GrpcService.WorkHistory", b =>
                {
                    b.HasOne("lumine8_GrpcService.ApplicationUser", "ApplicationUser")
                        .WithMany("WorkHistories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("lumine8_GrpcService.ApplicationUser", b =>
                {
                    b.Navigation("About");

                    b.Navigation("AboutMe");

                    b.Navigation("Bans");

                    b.Navigation("ChatMessages");

                    b.Navigation("EducationList");

                    b.Navigation("Exceptions");

                    b.Navigation("FriendDuos");

                    b.Navigation("GroupApprovals");

                    b.Navigation("GroupImages");

                    b.Navigation("GroupModels");

                    b.Navigation("GroupRequests");

                    b.Navigation("GroupUserComments");

                    b.Navigation("Images");

                    b.Navigation("Interests");

                    b.Navigation("Likes");

                    b.Navigation("Links");

                    b.Navigation("Liveds");

                    b.Navigation("MainPicture");

                    b.Navigation("Messages");

                    b.Navigation("Notifications");

                    b.Navigation("PFAQs");

                    b.Navigation("PetitionAddresses");

                    b.Navigation("Petitions");

                    b.Navigation("PrivateProfiles");

                    b.Navigation("ProfilePictures");

                    b.Navigation("ProfileSecurity");

                    b.Navigation("Relationships");

                    b.Navigation("Requests");

                    b.Navigation("Roles");

                    b.Navigation("Rooms");

                    b.Navigation("Shares");

                    b.Navigation("Subscribes");

                    b.Navigation("TagsFeeds");

                    b.Navigation("Tokens");

                    b.Navigation("UserComment");

                    b.Navigation("UserRooms");

                    b.Navigation("VideoComments");

                    b.Navigation("Videos");

                    b.Navigation("Votes");

                    b.Navigation("WorkHistories");
                });

            modelBuilder.Entity("lumine8_GrpcService.Country", b =>
                {
                    b.Navigation("States");
                });

            modelBuilder.Entity("lumine8_GrpcService.GroupImage", b =>
                {
                    b.Navigation("GroupUserComments");
                });

            modelBuilder.Entity("lumine8_GrpcService.GroupModel", b =>
                {
                    b.Navigation("Bans");

                    b.Navigation("Exceptions");

                    b.Navigation("FAQs");

                    b.Navigation("GroupApprovals");

                    b.Navigation("GroupImages");

                    b.Navigation("GroupLinks");

                    b.Navigation("GroupProfilePictures");

                    b.Navigation("GroupRequests");

                    b.Navigation("Hashtags");

                    b.Navigation("LumineChecks");

                    b.Navigation("Roles");

                    b.Navigation("RoomGroups");

                    b.Navigation("SectionRoles");
                });

            modelBuilder.Entity("lumine8_GrpcService.Image", b =>
                {
                    b.Navigation("ImageRoom");

                    b.Navigation("UserComments");
                });

            modelBuilder.Entity("lumine8_GrpcService.Lived", b =>
                {
                    b.Navigation("PetitionAddresses");
                });

            modelBuilder.Entity("lumine8_GrpcService.Message", b =>
                {
                    b.Navigation("Likes");

                    b.Navigation("RoomToMessages");
                });

            modelBuilder.Entity("lumine8_GrpcService.PetitionModel", b =>
                {
                    b.Navigation("PetitionSigs");
                });

            modelBuilder.Entity("lumine8_GrpcService.Room", b =>
                {
                    b.Navigation("CategoryRooms");

                    b.Navigation("ImageRoom");

                    b.Navigation("ImageRooms");

                    b.Navigation("LumineChecks");

                    b.Navigation("MessageHashtags");

                    b.Navigation("Messages");

                    b.Navigation("RoomGroups");

                    b.Navigation("RoomToMessages");

                    b.Navigation("Shares");

                    b.Navigation("VideoRooms");

                    b.Navigation("Votes");
                });

            modelBuilder.Entity("lumine8_GrpcService.RoomToMessage", b =>
                {
                    b.Navigation("CategoryRooms");

                    b.Navigation("RoomGroups");

                    b.Navigation("Shares");
                });

            modelBuilder.Entity("lumine8_GrpcService.State", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("lumine8_GrpcService.UserRoom", b =>
                {
                    b.Navigation("ChatMessages");
                });

            modelBuilder.Entity("lumine8_GrpcService.Video", b =>
                {
                    b.Navigation("VideoComments");

                    b.Navigation("VideoRooms");
                });

            modelBuilder.Entity("lumine8_GrpcService.VideoComment", b =>
                {
                    b.Navigation("VideoCommentOns");
                });

            modelBuilder.Entity("lumine8_GrpcService.VideoCommentOn", b =>
                {
                    b.Navigation("VideoComments");
                });
#pragma warning restore 612, 618
        }
    }
}
